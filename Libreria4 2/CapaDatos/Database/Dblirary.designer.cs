#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="master")]
	public partial class DbliraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEquipos(Equipos instance);
    partial void UpdateEquipos(Equipos instance);
    partial void DeleteEquipos(Equipos instance);
    partial void InsertHistorialUso(HistorialUso instance);
    partial void UpdateHistorialUso(HistorialUso instance);
    partial void DeleteHistorialUso(HistorialUso instance);
    partial void InsertHorarios(Horarios instance);
    partial void UpdateHorarios(Horarios instance);
    partial void DeleteHorarios(Horarios instance);
    partial void InsertReportesIncidencias(ReportesIncidencias instance);
    partial void UpdateReportesIncidencias(ReportesIncidencias instance);
    partial void DeleteReportesIncidencias(ReportesIncidencias instance);
    partial void InsertReservaciones(Reservaciones instance);
    partial void UpdateReservaciones(Reservaciones instance);
    partial void DeleteReservaciones(Reservaciones instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertSalas(Salas instance);
    partial void UpdateSalas(Salas instance);
    partial void DeleteSalas(Salas instance);
    partial void InsertTiposSala(TiposSala instance);
    partial void UpdateTiposSala(TiposSala instance);
    partial void DeleteTiposSala(TiposSala instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertConfiguracionSistema(ConfiguracionSistema instance);
    partial void UpdateConfiguracionSistema(ConfiguracionSistema instance);
    partial void DeleteConfiguracionSistema(ConfiguracionSistema instance);
    #endregion
		
		public DbliraryDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.masterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbliraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbliraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbliraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbliraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Equipos> Equipos
		{
			get
			{
				return this.GetTable<Equipos>();
			}
		}
		
		public System.Data.Linq.Table<HistorialUso> HistorialUso
		{
			get
			{
				return this.GetTable<HistorialUso>();
			}
		}
		
		public System.Data.Linq.Table<Horarios> Horarios
		{
			get
			{
				return this.GetTable<Horarios>();
			}
		}
		
		public System.Data.Linq.Table<ReportesIncidencias> ReportesIncidencias
		{
			get
			{
				return this.GetTable<ReportesIncidencias>();
			}
		}
		
		public System.Data.Linq.Table<Reservaciones> Reservaciones
		{
			get
			{
				return this.GetTable<Reservaciones>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<Salas> Salas
		{
			get
			{
				return this.GetTable<Salas>();
			}
		}
		
		public System.Data.Linq.Table<TiposSala> TiposSala
		{
			get
			{
				return this.GetTable<TiposSala>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<ConfiguracionSistema> ConfiguracionSistema
		{
			get
			{
				return this.GetTable<ConfiguracionSistema>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipos")]
	public partial class Equipos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEquipo;
		
		private int _IdSala;
		
		private string _NombreEquipo;
		
		private System.Nullable<int> _Cantidad;
		
		private string _Estado;
		
		private EntityRef<Salas> _Salas;
		
		private EntityRef<ConfiguracionSistema> _ConfiguracionSistema;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEquipoChanging(int value);
    partial void OnIdEquipoChanged();
    partial void OnIdSalaChanging(int value);
    partial void OnIdSalaChanged();
    partial void OnNombreEquipoChanging(string value);
    partial void OnNombreEquipoChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Equipos()
		{
			this._Salas = default(EntityRef<Salas>);
			this._ConfiguracionSistema = default(EntityRef<ConfiguracionSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEquipo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEquipo
		{
			get
			{
				return this._IdEquipo;
			}
			set
			{
				if ((this._IdEquipo != value))
				{
					if (this._ConfiguracionSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEquipoChanging(value);
					this.SendPropertyChanging();
					this._IdEquipo = value;
					this.SendPropertyChanged("IdEquipo");
					this.OnIdEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSala", DbType="Int NOT NULL")]
		public int IdSala
		{
			get
			{
				return this._IdSala;
			}
			set
			{
				if ((this._IdSala != value))
				{
					if (this._Salas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSalaChanging(value);
					this.SendPropertyChanging();
					this._IdSala = value;
					this.SendPropertyChanged("IdSala");
					this.OnIdSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEquipo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NombreEquipo
		{
			get
			{
				return this._NombreEquipo;
			}
			set
			{
				if ((this._NombreEquipo != value))
				{
					this.OnNombreEquipoChanging(value);
					this.SendPropertyChanging();
					this._NombreEquipo = value;
					this.SendPropertyChanged("NombreEquipo");
					this.OnNombreEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_Equipos", Storage="_Salas", ThisKey="IdSala", OtherKey="IdSala", IsForeignKey=true)]
		public Salas Salas
		{
			get
			{
				return this._Salas.Entity;
			}
			set
			{
				Salas previousValue = this._Salas.Entity;
				if (((previousValue != value) 
							|| (this._Salas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Salas.Entity = null;
						previousValue.Equipos.Remove(this);
					}
					this._Salas.Entity = value;
					if ((value != null))
					{
						value.Equipos.Add(this);
						this._IdSala = value.IdSala;
					}
					else
					{
						this._IdSala = default(int);
					}
					this.SendPropertyChanged("Salas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfiguracionSistema_Equipos", Storage="_ConfiguracionSistema", ThisKey="IdEquipo", OtherKey="IdConfiguracion", IsForeignKey=true)]
		public ConfiguracionSistema ConfiguracionSistema
		{
			get
			{
				return this._ConfiguracionSistema.Entity;
			}
			set
			{
				ConfiguracionSistema previousValue = this._ConfiguracionSistema.Entity;
				if (((previousValue != value) 
							|| (this._ConfiguracionSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfiguracionSistema.Entity = null;
						previousValue.Equipos = null;
					}
					this._ConfiguracionSistema.Entity = value;
					if ((value != null))
					{
						value.Equipos = this;
						this._IdEquipo = value.IdConfiguracion;
					}
					else
					{
						this._IdEquipo = default(int);
					}
					this.SendPropertyChanged("ConfiguracionSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistorialUso")]
	public partial class HistorialUso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHistorial;
		
		private int _IdReservacion;
		
		private System.DateTime _FechaUso;
		
		private string _Asistio;
		
		private string _Observaciones;
		
		private EntityRef<Reservaciones> _Reservaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHistorialChanging(int value);
    partial void OnIdHistorialChanged();
    partial void OnIdReservacionChanging(int value);
    partial void OnIdReservacionChanged();
    partial void OnFechaUsoChanging(System.DateTime value);
    partial void OnFechaUsoChanged();
    partial void OnAsistioChanging(string value);
    partial void OnAsistioChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    #endregion
		
		public HistorialUso()
		{
			this._Reservaciones = default(EntityRef<Reservaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistorial", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdHistorial
		{
			get
			{
				return this._IdHistorial;
			}
			set
			{
				if ((this._IdHistorial != value))
				{
					this.OnIdHistorialChanging(value);
					this.SendPropertyChanging();
					this._IdHistorial = value;
					this.SendPropertyChanged("IdHistorial");
					this.OnIdHistorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReservacion", DbType="Int NOT NULL")]
		public int IdReservacion
		{
			get
			{
				return this._IdReservacion;
			}
			set
			{
				if ((this._IdReservacion != value))
				{
					if (this._Reservaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdReservacionChanging(value);
					this.SendPropertyChanging();
					this._IdReservacion = value;
					this.SendPropertyChanged("IdReservacion");
					this.OnIdReservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaUso", DbType="Date NOT NULL")]
		public System.DateTime FechaUso
		{
			get
			{
				return this._FechaUso;
			}
			set
			{
				if ((this._FechaUso != value))
				{
					this.OnFechaUsoChanging(value);
					this.SendPropertyChanging();
					this._FechaUso = value;
					this.SendPropertyChanged("FechaUso");
					this.OnFechaUsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asistio", DbType="VarChar(2)")]
		public string Asistio
		{
			get
			{
				return this._Asistio;
			}
			set
			{
				if ((this._Asistio != value))
				{
					this.OnAsistioChanging(value);
					this.SendPropertyChanging();
					this._Asistio = value;
					this.SendPropertyChanged("Asistio");
					this.OnAsistioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observaciones", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservaciones_HistorialUso", Storage="_Reservaciones", ThisKey="IdReservacion", OtherKey="IdReservacion", IsForeignKey=true)]
		public Reservaciones Reservaciones
		{
			get
			{
				return this._Reservaciones.Entity;
			}
			set
			{
				Reservaciones previousValue = this._Reservaciones.Entity;
				if (((previousValue != value) 
							|| (this._Reservaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reservaciones.Entity = null;
						previousValue.HistorialUso.Remove(this);
					}
					this._Reservaciones.Entity = value;
					if ((value != null))
					{
						value.HistorialUso.Add(this);
						this._IdReservacion = value.IdReservacion;
					}
					else
					{
						this._IdReservacion = default(int);
					}
					this.SendPropertyChanged("Reservaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Horarios")]
	public partial class Horarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHorario;
		
		private System.TimeSpan _HoraInicio;
		
		private System.TimeSpan _HoraFin;
		
		private EntitySet<Reservaciones> _Reservaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHorarioChanging(int value);
    partial void OnIdHorarioChanged();
    partial void OnHoraInicioChanging(System.TimeSpan value);
    partial void OnHoraInicioChanged();
    partial void OnHoraFinChanging(System.TimeSpan value);
    partial void OnHoraFinChanged();
    #endregion
		
		public Horarios()
		{
			this._Reservaciones = new EntitySet<Reservaciones>(new Action<Reservaciones>(this.attach_Reservaciones), new Action<Reservaciones>(this.detach_Reservaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHorario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdHorario
		{
			get
			{
				return this._IdHorario;
			}
			set
			{
				if ((this._IdHorario != value))
				{
					this.OnIdHorarioChanging(value);
					this.SendPropertyChanging();
					this._IdHorario = value;
					this.SendPropertyChanged("IdHorario");
					this.OnIdHorarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraInicio", DbType="Time NOT NULL")]
		public System.TimeSpan HoraInicio
		{
			get
			{
				return this._HoraInicio;
			}
			set
			{
				if ((this._HoraInicio != value))
				{
					this.OnHoraInicioChanging(value);
					this.SendPropertyChanging();
					this._HoraInicio = value;
					this.SendPropertyChanged("HoraInicio");
					this.OnHoraInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraFin", DbType="Time NOT NULL")]
		public System.TimeSpan HoraFin
		{
			get
			{
				return this._HoraFin;
			}
			set
			{
				if ((this._HoraFin != value))
				{
					this.OnHoraFinChanging(value);
					this.SendPropertyChanging();
					this._HoraFin = value;
					this.SendPropertyChanged("HoraFin");
					this.OnHoraFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horarios_Reservaciones", Storage="_Reservaciones", ThisKey="IdHorario", OtherKey="IdHorario")]
		public EntitySet<Reservaciones> Reservaciones
		{
			get
			{
				return this._Reservaciones;
			}
			set
			{
				this._Reservaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Horarios = this;
		}
		
		private void detach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Horarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportesIncidencias")]
	public partial class ReportesIncidencias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdReporte;
		
		private int _IdSala;
		
		private System.DateTime _FechaReporte;
		
		private string _Descripción;
		
		private string _Estado;
		
		private EntityRef<Salas> _Salas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdReporteChanging(int value);
    partial void OnIdReporteChanged();
    partial void OnIdSalaChanging(int value);
    partial void OnIdSalaChanged();
    partial void OnFechaReporteChanging(System.DateTime value);
    partial void OnFechaReporteChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public ReportesIncidencias()
		{
			this._Salas = default(EntityRef<Salas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReporte", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdReporte
		{
			get
			{
				return this._IdReporte;
			}
			set
			{
				if ((this._IdReporte != value))
				{
					this.OnIdReporteChanging(value);
					this.SendPropertyChanging();
					this._IdReporte = value;
					this.SendPropertyChanged("IdReporte");
					this.OnIdReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSala", DbType="Int NOT NULL")]
		public int IdSala
		{
			get
			{
				return this._IdSala;
			}
			set
			{
				if ((this._IdSala != value))
				{
					if (this._Salas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSalaChanging(value);
					this.SendPropertyChanging();
					this._IdSala = value;
					this.SendPropertyChanged("IdSala");
					this.OnIdSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaReporte", DbType="Date NOT NULL")]
		public System.DateTime FechaReporte
		{
			get
			{
				return this._FechaReporte;
			}
			set
			{
				if ((this._FechaReporte != value))
				{
					this.OnFechaReporteChanging(value);
					this.SendPropertyChanging();
					this._FechaReporte = value;
					this.SendPropertyChanged("FechaReporte");
					this.OnFechaReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_ReportesIncidencias", Storage="_Salas", ThisKey="IdSala", OtherKey="IdSala", IsForeignKey=true)]
		public Salas Salas
		{
			get
			{
				return this._Salas.Entity;
			}
			set
			{
				Salas previousValue = this._Salas.Entity;
				if (((previousValue != value) 
							|| (this._Salas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Salas.Entity = null;
						previousValue.ReportesIncidencias.Remove(this);
					}
					this._Salas.Entity = value;
					if ((value != null))
					{
						value.ReportesIncidencias.Add(this);
						this._IdSala = value.IdSala;
					}
					else
					{
						this._IdSala = default(int);
					}
					this.SendPropertyChanged("Salas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservaciones")]
	public partial class Reservaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdReservacion;
		
		private int _IdUsuario;
		
		private int _IdSala;
		
		private int _IdHorario;
		
		private System.DateTime _Fecha;
		
		private string _Motivo;
		
		private string _Estado;
		
		private EntitySet<HistorialUso> _HistorialUso;
		
		private EntityRef<Horarios> _Horarios;
		
		private EntityRef<Salas> _Salas;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdReservacionChanging(int value);
    partial void OnIdReservacionChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdSalaChanging(int value);
    partial void OnIdSalaChanged();
    partial void OnIdHorarioChanging(int value);
    partial void OnIdHorarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Reservaciones()
		{
			this._HistorialUso = new EntitySet<HistorialUso>(new Action<HistorialUso>(this.attach_HistorialUso), new Action<HistorialUso>(this.detach_HistorialUso));
			this._Horarios = default(EntityRef<Horarios>);
			this._Salas = default(EntityRef<Salas>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReservacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdReservacion
		{
			get
			{
				return this._IdReservacion;
			}
			set
			{
				if ((this._IdReservacion != value))
				{
					this.OnIdReservacionChanging(value);
					this.SendPropertyChanging();
					this._IdReservacion = value;
					this.SendPropertyChanged("IdReservacion");
					this.OnIdReservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSala", DbType="Int NOT NULL")]
		public int IdSala
		{
			get
			{
				return this._IdSala;
			}
			set
			{
				if ((this._IdSala != value))
				{
					if (this._Salas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSalaChanging(value);
					this.SendPropertyChanging();
					this._IdSala = value;
					this.SendPropertyChanged("IdSala");
					this.OnIdSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHorario", DbType="Int NOT NULL")]
		public int IdHorario
		{
			get
			{
				return this._IdHorario;
			}
			set
			{
				if ((this._IdHorario != value))
				{
					if (this._Horarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHorarioChanging(value);
					this.SendPropertyChanging();
					this._IdHorario = value;
					this.SendPropertyChanged("IdHorario");
					this.OnIdHorarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(255)")]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservaciones_HistorialUso", Storage="_HistorialUso", ThisKey="IdReservacion", OtherKey="IdReservacion")]
		public EntitySet<HistorialUso> HistorialUso
		{
			get
			{
				return this._HistorialUso;
			}
			set
			{
				this._HistorialUso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horarios_Reservaciones", Storage="_Horarios", ThisKey="IdHorario", OtherKey="IdHorario", IsForeignKey=true)]
		public Horarios Horarios
		{
			get
			{
				return this._Horarios.Entity;
			}
			set
			{
				Horarios previousValue = this._Horarios.Entity;
				if (((previousValue != value) 
							|| (this._Horarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Horarios.Entity = null;
						previousValue.Reservaciones.Remove(this);
					}
					this._Horarios.Entity = value;
					if ((value != null))
					{
						value.Reservaciones.Add(this);
						this._IdHorario = value.IdHorario;
					}
					else
					{
						this._IdHorario = default(int);
					}
					this.SendPropertyChanged("Horarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_Reservaciones", Storage="_Salas", ThisKey="IdSala", OtherKey="IdSala", IsForeignKey=true)]
		public Salas Salas
		{
			get
			{
				return this._Salas.Entity;
			}
			set
			{
				Salas previousValue = this._Salas.Entity;
				if (((previousValue != value) 
							|| (this._Salas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Salas.Entity = null;
						previousValue.Reservaciones.Remove(this);
					}
					this._Salas.Entity = value;
					if ((value != null))
					{
						value.Reservaciones.Add(this);
						this._IdSala = value.IdSala;
					}
					else
					{
						this._IdSala = default(int);
					}
					this.SendPropertyChanged("Salas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Reservaciones", Storage="_Usuarios", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Reservaciones.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Reservaciones.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistorialUso(HistorialUso entity)
		{
			this.SendPropertyChanging();
			entity.Reservaciones = this;
		}
		
		private void detach_HistorialUso(HistorialUso entity)
		{
			this.SendPropertyChanging();
			entity.Reservaciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRol;
		
		private string _NombreRol;
		
		private string _Descripción;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRolChanging(int value);
    partial void OnIdRolChanged();
    partial void OnNombreRolChanging(string value);
    partial void OnNombreRolChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    #endregion
		
		public Roles()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreRol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NombreRol
		{
			get
			{
				return this._NombreRol;
			}
			set
			{
				if ((this._NombreRol != value))
				{
					this.OnNombreRolChanging(value);
					this.SendPropertyChanging();
					this._NombreRol = value;
					this.SendPropertyChanged("NombreRol");
					this.OnNombreRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Usuarios", ThisKey="IdRol", OtherKey="TipoUsuario")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salas")]
	public partial class Salas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSala;
		
		private string _NombreSala;
		
		private int _TipoSala;
		
		private string _Ubicación;
		
		private System.Nullable<int> _Capacidad;
		
		private string _Estado;
		
		private EntitySet<Equipos> _Equipos;
		
		private EntitySet<ReportesIncidencias> _ReportesIncidencias;
		
		private EntitySet<Reservaciones> _Reservaciones;
		
		private EntityRef<TiposSala> _TiposSala;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSalaChanging(int value);
    partial void OnIdSalaChanged();
    partial void OnNombreSalaChanging(string value);
    partial void OnNombreSalaChanged();
    partial void OnTipoSalaChanging(int value);
    partial void OnTipoSalaChanged();
    partial void OnUbicaciónChanging(string value);
    partial void OnUbicaciónChanged();
    partial void OnCapacidadChanging(System.Nullable<int> value);
    partial void OnCapacidadChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Salas()
		{
			this._Equipos = new EntitySet<Equipos>(new Action<Equipos>(this.attach_Equipos), new Action<Equipos>(this.detach_Equipos));
			this._ReportesIncidencias = new EntitySet<ReportesIncidencias>(new Action<ReportesIncidencias>(this.attach_ReportesIncidencias), new Action<ReportesIncidencias>(this.detach_ReportesIncidencias));
			this._Reservaciones = new EntitySet<Reservaciones>(new Action<Reservaciones>(this.attach_Reservaciones), new Action<Reservaciones>(this.detach_Reservaciones));
			this._TiposSala = default(EntityRef<TiposSala>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSala", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSala
		{
			get
			{
				return this._IdSala;
			}
			set
			{
				if ((this._IdSala != value))
				{
					this.OnIdSalaChanging(value);
					this.SendPropertyChanging();
					this._IdSala = value;
					this.SendPropertyChanged("IdSala");
					this.OnIdSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreSala", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NombreSala
		{
			get
			{
				return this._NombreSala;
			}
			set
			{
				if ((this._NombreSala != value))
				{
					this.OnNombreSalaChanging(value);
					this.SendPropertyChanging();
					this._NombreSala = value;
					this.SendPropertyChanged("NombreSala");
					this.OnNombreSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoSala", DbType="Int NOT NULL")]
		public int TipoSala
		{
			get
			{
				return this._TipoSala;
			}
			set
			{
				if ((this._TipoSala != value))
				{
					if (this._TiposSala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoSalaChanging(value);
					this.SendPropertyChanging();
					this._TipoSala = value;
					this.SendPropertyChanged("TipoSala");
					this.OnTipoSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubicación", DbType="VarChar(100)")]
		public string Ubicación
		{
			get
			{
				return this._Ubicación;
			}
			set
			{
				if ((this._Ubicación != value))
				{
					this.OnUbicaciónChanging(value);
					this.SendPropertyChanging();
					this._Ubicación = value;
					this.SendPropertyChanged("Ubicación");
					this.OnUbicaciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacidad", DbType="Int")]
		public System.Nullable<int> Capacidad
		{
			get
			{
				return this._Capacidad;
			}
			set
			{
				if ((this._Capacidad != value))
				{
					this.OnCapacidadChanging(value);
					this.SendPropertyChanging();
					this._Capacidad = value;
					this.SendPropertyChanged("Capacidad");
					this.OnCapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_Equipos", Storage="_Equipos", ThisKey="IdSala", OtherKey="IdSala")]
		public EntitySet<Equipos> Equipos
		{
			get
			{
				return this._Equipos;
			}
			set
			{
				this._Equipos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_ReportesIncidencias", Storage="_ReportesIncidencias", ThisKey="IdSala", OtherKey="IdSala")]
		public EntitySet<ReportesIncidencias> ReportesIncidencias
		{
			get
			{
				return this._ReportesIncidencias;
			}
			set
			{
				this._ReportesIncidencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salas_Reservaciones", Storage="_Reservaciones", ThisKey="IdSala", OtherKey="IdSala")]
		public EntitySet<Reservaciones> Reservaciones
		{
			get
			{
				return this._Reservaciones;
			}
			set
			{
				this._Reservaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposSala_Salas", Storage="_TiposSala", ThisKey="TipoSala", OtherKey="IdTipoSala", IsForeignKey=true)]
		public TiposSala TiposSala
		{
			get
			{
				return this._TiposSala.Entity;
			}
			set
			{
				TiposSala previousValue = this._TiposSala.Entity;
				if (((previousValue != value) 
							|| (this._TiposSala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposSala.Entity = null;
						previousValue.Salas.Remove(this);
					}
					this._TiposSala.Entity = value;
					if ((value != null))
					{
						value.Salas.Add(this);
						this._TipoSala = value.IdTipoSala;
					}
					else
					{
						this._TipoSala = default(int);
					}
					this.SendPropertyChanged("TiposSala");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Salas = this;
		}
		
		private void detach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Salas = null;
		}
		
		private void attach_ReportesIncidencias(ReportesIncidencias entity)
		{
			this.SendPropertyChanging();
			entity.Salas = this;
		}
		
		private void detach_ReportesIncidencias(ReportesIncidencias entity)
		{
			this.SendPropertyChanging();
			entity.Salas = null;
		}
		
		private void attach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Salas = this;
		}
		
		private void detach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Salas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TiposSala")]
	public partial class TiposSala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoSala;
		
		private string _NombreTipo;
		
		private string _Descripción;
		
		private EntitySet<Salas> _Salas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoSalaChanging(int value);
    partial void OnIdTipoSalaChanged();
    partial void OnNombreTipoChanging(string value);
    partial void OnNombreTipoChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    #endregion
		
		public TiposSala()
		{
			this._Salas = new EntitySet<Salas>(new Action<Salas>(this.attach_Salas), new Action<Salas>(this.detach_Salas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoSala", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTipoSala
		{
			get
			{
				return this._IdTipoSala;
			}
			set
			{
				if ((this._IdTipoSala != value))
				{
					this.OnIdTipoSalaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoSala = value;
					this.SendPropertyChanged("IdTipoSala");
					this.OnIdTipoSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreTipo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NombreTipo
		{
			get
			{
				return this._NombreTipo;
			}
			set
			{
				if ((this._NombreTipo != value))
				{
					this.OnNombreTipoChanging(value);
					this.SendPropertyChanging();
					this._NombreTipo = value;
					this.SendPropertyChanged("NombreTipo");
					this.OnNombreTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposSala_Salas", Storage="_Salas", ThisKey="IdTipoSala", OtherKey="TipoSala")]
		public EntitySet<Salas> Salas
		{
			get
			{
				return this._Salas;
			}
			set
			{
				this._Salas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Salas(Salas entity)
		{
			this.SendPropertyChanging();
			entity.TiposSala = this;
		}
		
		private void detach_Salas(Salas entity)
		{
			this.SendPropertyChanging();
			entity.TiposSala = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _NombreCompleto;
		
		private string _Correo;
		
		private string _Contraseña;
		
		private int _TipoUsuario;
		
		private System.DateTime _FechaRegistro;
		
		private EntitySet<Reservaciones> _Reservaciones;
		
		private EntityRef<Roles> _Roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreCompletoChanging(string value);
    partial void OnNombreCompletoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnTipoUsuarioChanging(int value);
    partial void OnTipoUsuarioChanged();
    partial void OnFechaRegistroChanging(System.DateTime value);
    partial void OnFechaRegistroChanged();
    #endregion
		
		public Usuarios()
		{
			this._Reservaciones = new EntitySet<Reservaciones>(new Action<Reservaciones>(this.attach_Reservaciones), new Action<Reservaciones>(this.detach_Reservaciones));
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCompleto", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NombreCompleto
		{
			get
			{
				return this._NombreCompleto;
			}
			set
			{
				if ((this._NombreCompleto != value))
				{
					this.OnNombreCompletoChanging(value);
					this.SendPropertyChanging();
					this._NombreCompleto = value;
					this.SendPropertyChanged("NombreCompleto");
					this.OnNombreCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoUsuario", DbType="Int NOT NULL")]
		public int TipoUsuario
		{
			get
			{
				return this._TipoUsuario;
			}
			set
			{
				if ((this._TipoUsuario != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._TipoUsuario = value;
					this.SendPropertyChanged("TipoUsuario");
					this.OnTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRegistro", DbType="Date NOT NULL")]
		public System.DateTime FechaRegistro
		{
			get
			{
				return this._FechaRegistro;
			}
			set
			{
				if ((this._FechaRegistro != value))
				{
					this.OnFechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._FechaRegistro = value;
					this.SendPropertyChanged("FechaRegistro");
					this.OnFechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Reservaciones", Storage="_Reservaciones", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Reservaciones> Reservaciones
		{
			get
			{
				return this._Reservaciones;
			}
			set
			{
				this._Reservaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Roles", ThisKey="TipoUsuario", OtherKey="IdRol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._TipoUsuario = value.IdRol;
					}
					else
					{
						this._TipoUsuario = default(int);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Reservaciones(Reservaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfiguracionSistema")]
	public partial class ConfiguracionSistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConfiguracion;
		
		private string _Clave;
		
		private string _Valor;
		
		private EntityRef<Equipos> _Equipos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConfiguracionChanging(int value);
    partial void OnIdConfiguracionChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    #endregion
		
		public ConfiguracionSistema()
		{
			this._Equipos = default(EntityRef<Equipos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConfiguracion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdConfiguracion
		{
			get
			{
				return this._IdConfiguracion;
			}
			set
			{
				if ((this._IdConfiguracion != value))
				{
					this.OnIdConfiguracionChanging(value);
					this.SendPropertyChanging();
					this._IdConfiguracion = value;
					this.SendPropertyChanged("IdConfiguracion");
					this.OnIdConfiguracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(255)")]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfiguracionSistema_Equipos", Storage="_Equipos", ThisKey="IdConfiguracion", OtherKey="IdEquipo", IsUnique=true, IsForeignKey=false)]
		public Equipos Equipos
		{
			get
			{
				return this._Equipos.Entity;
			}
			set
			{
				Equipos previousValue = this._Equipos.Entity;
				if (((previousValue != value) 
							|| (this._Equipos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipos.Entity = null;
						previousValue.ConfiguracionSistema = null;
					}
					this._Equipos.Entity = value;
					if ((value != null))
					{
						value.ConfiguracionSistema = this;
					}
					this.SendPropertyChanged("Equipos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
